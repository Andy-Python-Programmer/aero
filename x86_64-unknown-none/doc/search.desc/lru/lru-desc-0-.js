searchState.loadedDescShard("lru", 0, "An implementation of a LRU cache. The cache supports <code>get</code>, …\nAn iterator that moves out of a <code>LruCache</code>.\nAn iterator over the entries of a <code>LruCache</code>.\nAn iterator over mutables entries of a <code>LruCache</code>.\nAn LRU Cache\nReturns the maximum number of key-value pairs the cache …\nClears the contents of the cache.\nReturns a bool indicating whether the given key is in the …\nMarks the key as the least recently used one.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a reference to the value of the key in the cache …\nReturns a key-value references pair of the key in the …\nReturns a key-value references pair of the key in the …\nReturns a mutable reference to the value of the key in the …\nReturns a reference to the value of the key in the cache …\nReturns a mutable reference to the value of the key in the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns a bool indicating whether the cache is empty or …\nAn iterator visiting all entries in most-recently used …\nAn iterator visiting all entries in most-recently-used …\nReturns the number of key-value pairs that are currently …\nCreates a new LRU Cache that holds at most <code>cap</code> items.\nReturns a reference to the value corresponding to the key …\nReturns the value corresponding to the least recently used …\nReturns a mutable reference to the value corresponding to …\nRemoves and returns the value corresponding to the key …\nRemoves and returns the key and the value corresponding to …\nRemoves and returns the key and value corresponding to the …\nMarks the key as the most recently used one.\nPushes a key-value pair into the cache. If an entry with …\nPuts a key-value pair into cache. If the key already …\nResizes the cache. If the new capacity is smaller than the …\nReturns a reference to the value of the key in the cache …\nReturns a mutable reference to the value of the key in the …\nCreates a new LRU Cache that never automatically evicts …\nCreates a new LRU Cache that never automatically evicts …\nCreates a new LRU Cache that holds at most <code>cap</code> items and …")