searchState.loadedDescShard("limine", 0, "Rust Bindings for the limine boot protocol.\nA tag setting the base revision supported by the kernel. …\nCreate a NUL-terminated C string from a string literal\nFile structure and related functions.\nAuxiliary types for the framebuffer request\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCheck whether the given revision is supported by the …\nAuxiliary types for the memory map request\nAuxiliary types for the module request\nCreate a new base revision tag with the latest revision.\nAuxiliary types for the paging mode request.\nRequest structures\nResponses to requests.\nAuxiliary types for the SMP request.\nCreate a new base revision tag with the given revision.\nA file loaded by the bootloader. Returned from …\nUnknown media type.\nA media type for a file.\nA CD-ROM.\nA TFTP server.\nA UUID. With the <code>uuid</code> feature, this can be converted …\nThe first 32 bits of the UUID.\nThe base address of the file. Note that this is not …\nThe next 16 bits of the UUID.\nThe next 16 bits of the UUID.\nThe command line of the file. This is the command line …\nThe last 64 bits of the UUID.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe GPT disk UUID of the file, if the file was loaded from …\nThe GPT partition UUID of the file, if the file was loaded …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe MBR disk ID of the file, if the file was loaded from …\nThe media type of the file. See <code>MediaType</code> for more …\nThe partition index of the file, if the file was loaded …\nThe partition UUID of the file, if the file was loaded …\nThe path of the file. This is the path that was passed to …\nGet the revision of the file. Currently, this is always 0.\nThe size of the file, in bytes.\nThe IP address of the TFTP server, if the file was loaded …\nThe port of the TFTP server, if the file was loaded from a …\nA pointer to a framebuffer.\nA memory model used by a framebuffer. Currently only …\nThis is an RGB framebuffer.\nA mode supported by the current framebuffer.\nThe address of the framebuffer. Note that no …\nThe number of bits to shift the blue mask to the left. …\nThe number of bits to shift the blue mask to the left. …\nThe size of the blue mask, in bits. This part of the mask …\nThe size of the blue mask, in bits. This part of the mask …\nThe number of <strong>bits</strong> (<em>not bytes</em>) per pixel of the …\nThe number of <strong>bits</strong> (<em>not bytes</em>) per single pixel in the …\nThe raw EDID bytes of the display attached to this …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe number of bits to shift the green mask to the left. …\nThe number of bits to shift the green mask to the left. …\nThe size of the green mask, in bits. This part of the mask …\nThe size of the green mask, in bits. This part of the mask …\nThe height of the framebuffer in its current mode.\nThe height of the framebuffer, in pixels.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe memory model of the framebuffer in the current mode. …\nThe memory model used by this video mode. See <code>MemoryModel</code> …\nThe video modes supported on this framebuffer. Only …\nThe pitch (distance between rows, in bytes) of the …\nThe pitch (distance between rows, in bytes). This is not …\nThe number of bits to shift the red mask to the left. This …\nThe number of bits to shift the red mask to the left. This …\nThe size of the red mask, in bits. This part of the mask …\nThe size of the red mask, in bits. This part of the mask …\nThe width of the framebuffer in its current mode.\nThe width of the framebuffer, in pixels.\nThe memory region is permanently reserved by ACPI, and …\nThe memory region is currently used by ACPI, but can be …\nThe memory region is unusable due to physical damage or …\nThe memory region is used by the bootloader, but can be …\nA memory map entry.\nA type of entry within the memory map.\nThe memory region is used by the framebuffer, and as such …\nThe memory region is used by the kernel and modules, and …\nThe memory region is permanently reserved.\nThe memory region is freely usable.\nThe base of the memory region, in <em>physical space</em>.\nThe type of the memory region. See <code>EntryType</code> for specific …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe length of the memory region, in bytes.\nThe module is GZ-compressed and will be uncompressed by the\nAn internal module that the kernel requests from the …\nFlags for internal modules\nThe module is required. If it is not found, the bootloader …\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nReturns the module’s command-line as a byte slice with …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the module’s flags.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nCreate a new internal module with no path, no cmdline and …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nReturns the module’s path as a byte slice with …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nSet the command-line for the module. This function …\nSet the flags for the module. This function operates in …\nSet the path of the internal module. This function …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nSet the command-line for the module. This function returns …\nSet the flags for the module. This function returns the …\nSet the path of the internal module. This function returns …\n(x86_64 and aarch64) Five-level paging (i.e. 52-bit …\n(x86_64 and aarch64) Four-level paging (i.e. 48-bit …\nPaging mode flags. None are currently specified.\nA paging mode.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nRequest the boot time in seconds\nRequest the name and version of the loading bootloader.\nRequest the address of the device-tree blob, if one is …\nRequest the address of the UEFI memory map.\nRequest the address of the UEFI system table.\nRequests limine to use a specific function as the kernel …\n<strong>This request is deprecated and was removed from the </strong>…\nRequest a framebuffer for graphics output.\nRequest information about the higher-half direct mapping.\nRequest the base address of the kernel code, in virtual …\nRequest information about the loaded kernel file. See <code>File</code> …\nRequest limine’s memory map. This may or may not be the …\nRequest information about the loaded modules. See <code>File</code> for …\nRequest certain platform-dependent paging modes and flags …\nRequest the RSDP address.\nRequest the address of the SMBIOS table.\nRequest the start of all other cores on the system, if …\nRequest a differently-sized stack.\nGet the entry point function. The function must never …\nGet the requested paging flags. See <code>Flags</code> for more …\nGet the SMP request flags. See <code>RequestFlags</code> for more …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the response to this request, if it has been set.\nGet the response to this request, if it has been set.\nGet the response to this request, if it has been set.\nGet the response to this request, if it has been set.\nGet the response to this request, if it has been set.\nGet the response to this request, if it has been set.\nGet the response to this request, if it has been set.\nGet the response to this request, if it has been set.\nGet the response to this request, if it has been set.\nGet the response to this request, if it has been set.\nGet the response to this request, if it has been set.\nGet the response to this request, if it has been set.\nGet the response to this request, if it has been set.\nGet the response to this request, if it has been set.\nGet the response to this request, if it has been set.\nGet the response to this request, if it has been set.\nGet the response to this request, if it has been set.\nGet the response to this request, if it has been set.\nGet a mutable reference to the response to this request, …\nGet a mutable reference to the response to this request, …\nGet a mutable reference to the response to this request, …\nGet a mutable reference to the response to this request, …\nGet a mutable reference to the response to this request, …\nGet a mutable reference to the response to this request, …\nGet a mutable reference to the response to this request, …\nGet a mutable reference to the response to this request, …\nGet a mutable reference to the response to this request, …\nGet a mutable reference to the response to this request, …\nGet a mutable reference to the response to this request, …\nGet a mutable reference to the response to this request, …\nGet a mutable reference to the response to this request, …\nGet a mutable reference to the response to this request, …\nGet a mutable reference to the response to this request, …\nGet a mutable reference to the response to this request, …\nGet a mutable reference to the response to this request, …\nGet a mutable reference to the response to this request, …\nGet the ID of this request. This includes the magic number …\nGet the ID of this request. This includes the magic number …\nGet the ID of this request. This includes the magic number …\nGet the ID of this request. This includes the magic number …\nGet the ID of this request. This includes the magic number …\nGet the ID of this request. This includes the magic number …\nGet the ID of this request. This includes the magic number …\nGet the ID of this request. This includes the magic number …\nGet the ID of this request. This includes the magic number …\nGet the ID of this request. This includes the magic number …\nGet the ID of this request. This includes the magic number …\nGet the ID of this request. This includes the magic number …\nGet the ID of this request. This includes the magic number …\nGet the ID of this request. This includes the magic number …\nGet the ID of this request. This includes the magic number …\nGet the ID of this request. This includes the magic number …\nGet the ID of this request. This includes the magic number …\nGet the ID of this request. This includes the magic number …\nGet the internal modules to be loaded. Only available on …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the requested paging mode. See <code>Mode</code> for more …\nCreate a new request with the latest revision.\nCreate a new request with the latest revision.\nCreate a new request with the latest revision.\nCreate a new request with the latest revision.\nCreate a new request with the latest revision.\nCreate a new request with the latest revision.\nCreate a new request with the latest revision.\nCreate a new request with the latest revision.\nCreate a new request with the latest revision.\nCreate a new request with the latest revision.\nCreate a new request with the latest revision.\nCreate a new request with the latest revision.\nCreate a new request with the latest revision.\nCreate a new request with the latest revision.\nCreate a new request with the latest revision.\nCreate a new request with the latest revision.\nCreate a new request with the latest revision.\nCreate a new request with the latest revision.\nGet the revision of this request.\nGet the revision of this request.\nGet the revision of this request.\nGet the revision of this request.\nGet the revision of this request.\nGet the revision of this request.\nGet the revision of this request.\nGet the revision of this request.\nGet the revision of this request.\nGet the revision of this request.\nGet the revision of this request.\nGet the revision of this request.\nGet the revision of this request.\nGet the revision of this request.\nGet the revision of this request.\nGet the revision of this request.\nGet the revision of this request.\nGet the revision of this request.\nSet the entry point function. The function must never …\nSet the requested paging flags. See <code>Flags</code> for more …\nSet the SMP request flags. See <code>RequestFlags</code> for more …\nSeet the internal modules to be loaded. Only available on …\nSet the requested paging mode. See <code>Mode</code> for more …\nSet the requested stack size, in bytes. This function …\nGet the requested stack size, in bytes.\nSet the entry point function. The function must never …\nSet the requested paging flags. See <code>Flags</code> for more …\nSet the SMP request flags. See <code>RequestFlags</code> for more …\nSet the internal modules to be loaded. Only available on …\nSet the requested paging mode. See <code>Mode</code> for more …\nCreate a new request with the given revision.\nCreate a new request with the given revision.\nCreate a new request with the given revision.\nCreate a new request with the given revision.\nCreate a new request with the given revision.\nCreate a new request with the given revision.\nCreate a new request with the given revision.\nCreate a new request with the given revision.\nCreate a new request with the given revision.\nCreate a new request with the given revision.\nCreate a new request with the given revision.\nCreate a new request with the given revision.\nCreate a new request with the given revision.\nCreate a new request with the given revision.\nCreate a new request with the given revision.\nCreate a new request with the given revision.\nCreate a new request with the given revision.\nCreate a new request with the given revision.\nSet the requested stack size, in bytes. This function …\nA response to a boot time request.\nA response to a bootloader info request.\nA response to a device tree blob request.\nA response to a memory map request.\nA response to a system table request.\nA response to a kernel file request.\n<strong>This request is deprecated and was removed from the </strong>…\nA response to a framebuffer request.\nA response to a higher-half direct map request.\nA response to a kernel address request.\nA response to a kernel file request.\nA response to a memory map request.\nA response to a module request.\nA response to a paging mode request.\nA response to a rsdp request.\nA response to a smbios request.\nA response to a smp request. This response contains …\nA response to a stack size request. This response has no …\nReturns the address of the RSDP table in the ACPI.\nReturns the address of the EFI system table.\nReturns the boot time in seconds, as read from the system …\nReturns the local APIC ID of the boot processor. This is …\nReturns a slice of found CPUs. See [<code>Cpu</code>] for more …\nReturns a mutable slice of found CPUs. See [<code>Cpu</code>] for more …\nReturns the size of each EFI memory map entry.\nReturns the version of each EFI memory map entry.\nReturns the address of the device tree blob.\nReturns a slice of found memory map entries. See <code>Entry</code> for …\nReturns a mutable slice of found memory map entries. See …\nReturns the address of the SMBIOS 32-bit entry point, if …\nReturns the address of the SMBIOS 64-bit entry point, if …\nReturns the kernel file. See <code>File</code> for more information.\nReturns the flags that were enabled by the bootloader. See …\nReturns the flags that were enabled by the bootloader. See …\nReturns an iterator over the found framebuffers. See …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the address of the EFI memory map.\nReturns the size of the EFI memory map.\nReturns mode that was enabled by the bootloader. See <code>Mode</code> …\nReturns a slice of loaded modules. See <code>File</code> for more …\nReturns the name of the loading bootloader.\nReturns the offset of the higher-half direct map. This can …\nReturns the base address of the kernel in physical memory.\nReturns the revision of the response.\nReturns the revision of the response.\nReturns the revision of the response.\nReturns the revision of the response.\nReturns the revision of the response.\nReturns the revision of the response.\nReturns the revision of the response.\nReturns the revision of the response.\nReturns the revision of the response.\nReturns the revision of the response.\nReturns the revision of the response.\nReturns the revision of the response.\nReturns the revision of the response.\nReturns the revision of the response.\nReturns the revision of the response.\nReturns the revision of the response.\nReturns the revision of the response.\nReturns the revision of the response.\nReturns the version of the loading bootloader.\nReturns the base address of the kernel in virtual memory.\nA CPU entry in the SMP request.\nA function pointer that the core will jump to when it is …\nFlags for the SMP request.\nFlags for the SMP response.\nInitialize the X2APIC.\nThe X2APIC was initialized.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nFree for use by the kernel.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nThe address to jump to. Writing to this field will cause …\nThe ACPI processor ID, according to the ACPI MADT.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nThe APIC ID, according to the ACPI MADT.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nSet the goto address pointer. This will cause the core to …")