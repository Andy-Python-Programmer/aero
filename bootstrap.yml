imports:
  - file: bootstrap/xorg.yml

general:
  cargo:
    config_toml: 'extra-files/rust/config.toml'

sources:
  - name: binutils
    subdir: 'bundled'
    git: 'git://sourceware.org/git/binutils-gdb.git'
    tag: 'binutils-2_37'
    version: '2.37'
    patch-path-strip: 1

  - name: gcc
    subdir: 'bundled'
    git: 'git://gcc.gnu.org/git/gcc.git'
    tag: 'releases/gcc-11.2.0'
    patch-path-strip: 1
    version: '11.2.0'
    tools_required:
      - host-autoconf-v2.69
      - host-automake-v1.16
    regenerate:
      # download_prerequisites should probably move to some "post_checkout" step.
      - args: ['./contrib/download_prerequisites']
        workdir: '@THIS_SOURCE_DIR@'
      - args: ['autoconf']
        workdir: '@THIS_SOURCE_DIR@/gcc'
      - args: ['autoconf']
        workdir: '@THIS_SOURCE_DIR@/libstdc++-v3'
      - args: ['cp',
          '@BUILD_ROOT@/tools/host-automake-v1.16/share/automake-1.16/config.sub',
          '@THIS_SOURCE_DIR@/']
      - args: ['cp',
          '@BUILD_ROOT@/tools/host-automake-v1.16/share/automake-1.16/config.sub',
          '@THIS_SOURCE_DIR@/gmp-6.1.0/configfsf.sub']
      - args: ['cp',
          '@BUILD_ROOT@/tools/host-automake-v1.16/share/automake-1.16/config.sub',
          '@THIS_SOURCE_DIR@/isl-0.18/config.sub']
      - args: ['cp', '-f',
          '@BUILD_ROOT@/tools/host-automake-v1.16/share/automake-1.16/config.sub',
          '@THIS_SOURCE_DIR@/mpc-1.0.3/config.sub']
      - args: ['cp',
          '@BUILD_ROOT@/tools/host-automake-v1.16/share/automake-1.16/config.sub',
          '@THIS_SOURCE_DIR@/mpfr-3.1.6/config.sub']

  - name: mlibc
    subdir: 'bundled'
    git: 'https://github.com/managarm/mlibc'
    branch: 'master'

  - name: tzcode
    subdir: 'bundled'
    url: 'https://data.iana.org/time-zones/releases/tzcode2022a.tar.gz'
    format: 'tar.gz'
    version: '2022a'

  - name: tzdata
    subdir: 'bundled'
    sources_required: ['tzcode']
    url: 'https://data.iana.org/time-zones/releases/tzdata2022a.tar.gz'
    format: 'tar.gz'
    version: '2022a'
    regenerate:
      - args: ['cp', '-r', '@THIS_SOURCE_DIR@/../tzcode/.', '@THIS_SOURCE_DIR@/']

  - name: rust
    subdir: 'bundled'
    git: 'https://github.com/rust-lang/rust.git'
    branch: 'master'
    commit: '22e491ac7ed454d34669151a8b6464cb643c9b41'

  - name: llvm
    subdir: 'bundled'
    git: 'https://github.com/llvm/llvm-project.git'
    tag: 'llvmorg-13.0.0'
    version: '13.0.0'

  # ---------------------------------------------------------------------------
  # Rust patched crates start
  # ---------------------------------------------------------------------------
  - name: rust-libc
    subdir: 'bundled'
    git: 'https://github.com/Andy-Python-Programmer/libc.git'
    branch: 'master'

  - name: rust-num-cpus
    subdir: 'bundled'
    git: 'https://github.com/seanmonstar/num_cpus.git'
    tag: 'v1.13.0'
    version: '1.13.0'

  - name: rust-users
    subdir: 'bundled'
    git: 'https://github.com/ogham/rust-users.git'
    tag: 'v0.11.0'
    version: '0.11.0'

  - name: rust-winit
    subdir: 'bundled'
    git: 'https://github.com/rust-windowing/winit.git'
    tag: 'v0.26.1'
    version: '0.26.1'

  - name: rust-mio-0.8
    subdir: 'bundled'
    git: 'https://github.com/tokio-rs/mio.git'
    tag: 'v0.8.3'
    version: '0.8.3'

  - name: rust-nix
    subdir: 'bundled'
    git: 'https://github.com/nix-rust/nix.git'
    tag: 'v0.22.3'
    version: '0.22.3'

  - name: rust-mio-0.6
    subdir: 'bundled'
    git: 'https://github.com/tokio-rs/mio.git'
    tag: 'v0.6.23'
    version: '0.6.23'

  - name: rust-glutin
    subdir: 'bundled'
    git: 'https://github.com/rust-windowing/glutin.git'
    tag: 'v0.28.0'
    version: '0.28.0'

  - name: rust-shared-library
    subdir: 'bundled'
    git: 'https://github.com/tomaka/shared_library.git'
    commit: 'f09e038246a559650c8505b3b3831b820d1a5689'
    branch: 'master'
    version: '0.1.9'

  - name: rust-libloading
    subdir: 'bundled'
    git: 'https://github.com/nagisa/rust_libloading.git'
    tag: '0.7.3'
    version: '0.7.3'

  - name: rust-patched-libs
    subdir: 'bundled'
    sources_required:
      - name: rust-libc
        recursive: true
      - name: rust-num-cpus
        recursive: true
      - name: rust-users
        recursive: true
      - name: rust-winit
        recursive: true
      - name: rust-shared-library
        recursive: true
      - name: rust-mio-0.8
        recursive: true
      - name: rust-mio-0.6
        recursive: true
      - name: rust-nix
        recursive: true
      - name: rust-glutin
        recursive: true
      - name: rust-libloading
        recursive: true
  # ---------------------------------------------------------------------------
  # Rust patched crates end
  # ---------------------------------------------------------------------------

  - name: python
    subdir: 'bundled'
    patch-path-strip: 1
    git: 'https://github.com/python/cpython.git'
    tag: 'v3.8.2'
    version: '3.8.2'
    tools_required:
      - host-autoconf-v2.69
      - host-automake-v1.16
    regenerate:
      - args: ['autoreconf', '-f', '-i']

  - name: 'pkg-config'
    subdir: 'bundled'
    git: 'https://gitlab.freedesktop.org/pkg-config/pkg-config.git'
    tag: 'pkg-config-0.29.2'
    version: '0.29.2'
    tools_required:
      - host-autoconf-v2.69
      - host-automake-v1.16
      - host-libtool
    regenerate:
      - args: ['./autogen.sh']
        environ:
          'NOCONFIGURE': 'yes'

  - name: wayland
    subdir: 'bundled'
    git: 'https://github.com/wayland-project/wayland.git'
    tag: '1.20.0'
    version: '1.20.0'

  - name: libxtrans
    subdir: 'bundled'
    git: 'https://gitlab.freedesktop.org/xorg/lib/libxtrans.git'
    tag: 'xtrans-1.4.0'
    version: '1.4.0'
    tools_required:
      - host-autoconf-v2.69
      - host-automake-v1.16
      - host-libtool
      - host-pkg-config
      - host-xorg-macros
    regenerate:
      - args: ['./autogen.sh']
        environ:
          NOCONFIGURE: 'yes'

tools:
  - name: host-cmake
    source:
      subdir: 'bundled'
      git: 'https://gitlab.kitware.com/cmake/cmake.git'
      tag: 'v3.24.2'
      version: '3.24.2'
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/bootstrap'
        - '--prefix=@PREFIX@'
        - '--parallel=@PARALLELISM@'
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']
      - args: ['ln', '-sf', '@SOURCE_ROOT@/userland/aero.cmake', '@PREFIX@/share/cmake-3.24/Modules/Platform/']

  # We could run an external pkg-config; however, we need the aclocal files.
  # The easiest way to ensure that they are available is to just install pkg-config.
  - name: host-pkg-config
    exports_aclocal: true
    from_source: pkg-config
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
        - '--with-internal-glib'
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']

  - name: host-autoconf-v2.69
    source:
      name: autoconf-v2.69
      subdir: 'bundled'
      url: 'https://ftp.gnu.org/gnu/autoconf/autoconf-2.69.tar.xz'
      format: 'tar.xz'
      extract_path: 'autoconf-2.69'
      patch-path-strip: 3
      version: '2.69'
    configure:
      - args: ['@THIS_SOURCE_DIR@/configure', '--prefix=@PREFIX@']
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']

  - name: host-automake-v1.16
    source:
      name: automake-v1.16
      subdir: 'bundled'
      git: 'https://github.com/autotools-mirror/automake'
      tag: 'v1.16.5'
      version: '1.16.5'
      tools_required:
        - host-autoconf-v2.69
      regenerate:
        - args: ['./bootstrap']
    tools_required:
      - host-autoconf-v2.69
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
    compile:
      - args: |
          set -e
          export PATH="`pwd`/bin:$PATH"
          make bin/aclocal-1.16 bin/automake-1.16 -j@PARALLELISM@
          make -j@PARALLELISM@
    install:
      - args: ['make', 'install-strip']
      - args: ['ln', '-sf', '@PREFIX@/share/aclocal-1.16', '@PREFIX@/share/aclocal']

  - name: host-rust
    from_source: rust
    tools_required:
      - host-llvm
    sources_required:
      - rust-patched-libs
    compile:
      - args: |
            cat << EOF > config.toml
            changelog-seen = 2

            [llvm]
            targets = "X86"

            [build]
            target = ["x86_64-unknown-aero-system", "x86_64-unknown-linux-gnu"]
            build-dir = "@THIS_BUILD_DIR@"
            docs = false

            [install]
            prefix = "@PREFIX@"

            [rust]
            codegen-tests = false
            deny-warnings = false # work around rust-num-cpus warning

            [target.x86_64-unknown-linux-gnu]
            llvm-config = "@BUILD_ROOT@/tools/host-llvm/bin/llvm-config"

            [target.x86_64-unknown-aero-system]
            llvm-config = "@BUILD_ROOT@/tools/host-llvm/bin/llvm-config"
            EOF
      - args: ['python3', '@THIS_SOURCE_DIR@/x.py', 'build', '--stage', '2', '-j', '@PARALLELISM@']
    install:
      - args: ['python3', '@THIS_SOURCE_DIR@/x.py', 'install', '-j', '@PARALLELISM@']

  # - name: host-cargo
  #   source:
  #     subdir: 'bundled'
  #     git: 'https://github.com/rust-lang/cargo.git'
  #     tag: '0.61.0'
  #     version: '0.61.0'
  #   tools_required:
  #     - tool: host-rust
  #       recursive: true
  #     - tool: host-gcc # GCC is used for linking
  #       recursive: true
  #   sources_required:
  #     # This cargo runs on the host, so we don't actually need any patches here. We just
  #     # add the sources used by cargo so that the dependency resolver doesn't complain.
  #     - rust-patched-libs
  #     - host-bootstrap-cargo
  #   compile:
  #     - args:
  #       - 'cargo'
  #       - 'install'
  #       - '--target'
  #       - 'x86_64-unknown-linux-gnu'
  #       - '--target-dir'
  #       - '@THIS_BUILD_DIR@'
  #       - '--path'
  #       - '@THIS_SOURCE_DIR@'
  #       - '-j@PARALLELISM@'
  #       - '--root'
  #       - '@PREFIX@'

  - name: host-python
    from_source: python
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']

  - name: host-binutils
    from_source: binutils
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
        - '--target=x86_64-aero'
        - '--with-sysroot=@SYSROOT_DIR@'
        # On recent compilers, binutils 2.26 causes implicit-fallthrough warnings, among others.
        - '--disable-werror'
        - '--enable-targets=x86_64-elf,x86_64-pe'
        # -g blows up the binary size.
        - 'CFLAGS=-pipe'
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']

  - name: host-gcc
    from_source: gcc
    tools_required:
      - tool: host-binutils
        recursive: true
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
        - '--target=x86_64-aero'
        - '--with-sysroot=@SYSROOT_DIR@'
        - '--enable-languages=c,c++'
        - '--disable-multilib'
        - '--enable-initfini-array'
        # -g blows up GCC's binary size.
        - 'CFLAGS=-O2 -pipe'
        - 'CXXFLAGS=-O2 -pipe'
    stages:
      - name: compiler
        pkgs_required:
          - mlibc-headers
        compile:
          - args: ['make', '-j@PARALLELISM@', 'all-gcc']
        install:
          - args: ['make', 'install-gcc']
          # GCC does *not* look for target-prefixed LD/AS.
          # Instead, it searches a list of prefix directories. Link AS/LD to make it happy.
          - args: ['mkdir', '-p', '@PREFIX@/x86_64-aero/bin']
          - args: ['ln', '-sf', '../../../host-binutils/x86_64-aero/bin/as',
                               '@PREFIX@/x86_64-aero/bin/as']
          - args: ['ln', '-sf', '../../../host-binutils/x86_64-aero/bin/ld',
                               '@PREFIX@/x86_64-aero/bin/ld']
      - name: libgcc
        tools_required:
          - tool: host-gcc
            stage_dependencies: [compiler]
        pkgs_required:
          - mlibc
        compile:
          - args: ['make', '-j@PARALLELISM@', 'all-target-libgcc']
        install:
          - args: ['make', 'install-strip-target-libgcc']

      - name: libstdc++
        tools_required:
          - tool: host-gcc
            stage_dependencies: [libgcc]
        compile:
          - args: ['make', '-j@PARALLELISM@', 'all-target-libstdc++-v3']
        install:
          - args: ['make', 'install-strip-target-libstdc++-v3']

  - name: host-llvm
    from_source: llvm
    sources_required:
      - binutils
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=@PREFIX@'
        # LLVM configuration options.
        # We really have to build LLVM in Release mode.
        # Building it in debug mode produces tens of GiB of debugging info.
        - '-DCMAKE_BUILD_TYPE=Release'
        - '-DLLVM_TARGETS_TO_BUILD=X86'
        - '-DLLVM_ENABLE_PROJECTS=llvm'
        - '-DLLVM_ENABLE_Z3_SOLVER=OFF'
        # clang configuration options.
        - '-DDEFAULT_SYSROOT=@SYSROOT_DIR@'
        # Gold linker configuration options.
        - '-DLLVM_BINUTILS_INCDIR=@SOURCE_ROOT@/bundled/binutils/include'
        - '@THIS_SOURCE_DIR@/llvm'
    compile:
      - args: ['ninja', '-j@PARALLELISM@']
      # Build on a single CPU to prevent OOM on smaller systems.
      #- args: ['ninja', '-j1']
    install:
      - args: ['ninja', 'install', '-j@PARALLELISM@']
        # quiet: true

  - name: host-libtool
    exports_aclocal: true
    source:
      name: libtool
      subdir: 'bundled'
      git: 'https://git.savannah.gnu.org/git/libtool.git'
      tag: 'v2.4.6'
      version: '2.4.6'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.16
      regenerate:
        # libtool's ./bootstrap does a shallow clone with insufficient depth.
        - args: ['git', 'submodule', 'update', '--init']
        - args: ['./bootstrap']
    tools_required:
      - host-autoconf-v2.69
      - host-automake-v1.16
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']

  - name: wayland-scanner
    from_source: wayland
    tools_required:
      - virtual: pkgconfig-for-host
        program_name: host-pkg-config
    configure:
      - args:
        - 'meson'
        - '--native-file'
        - '@SOURCE_ROOT@/userland/native-file.ini'
        - '--prefix=@PREFIX@'
        - '-Ddtd_validation=false'
        - '-Ddocumentation=false'
        - '-Dscanner=true'
        - '-Dlibraries=false'
        - '@THIS_SOURCE_DIR@'
    compile:
      - args: ['ninja']
    install:
      - args: ['ninja', 'install']

packages:
  - name: alacritty
    source:
      subdir: 'bundled'
      git: 'https://github.com/alacritty/alacritty'
      tag: 'v0.10.1'
      version: '0.10.1'
    tools_required:
      # - host-cargo
      - host-rust
      - host-gcc
    sources_required:
      - rust-patched-libs
    pkgs_required:
      - mlibc
      - fontconfig
      - freetype
      - libx11
    configure:
      - args: ['python3', '@SOURCE_ROOT@/tools/cargo-inject-patches.py', '@THIS_SOURCE_DIR@/Cargo.toml']
      # - args: ['cargo', 'update', '--manifest-path', '@THIS_SOURCE_DIR@/Cargo.toml']
    build:
      - args: ['install', '-D', '@THIS_SOURCE_DIR@/alacritty.yml', '@THIS_COLLECT_DIR@/root/.alacritty.yml']
      - args:
        - 'cargo'
        - 'install'
        - '--no-default-features'
        - '--features'
        - 'x11'
        - '--locked'
        - '--target-dir'
        - '@THIS_BUILD_DIR@'
        - '--path'
        - '@THIS_SOURCE_DIR@/alacritty'
        - '--root'
        - '@THIS_COLLECT_DIR@/usr'
        - '-j@PARALLELISM@'
        environ:
          RUSTFLAGS: '-Cforce-frame-pointers=yes -Clink-args=-no-pie'

  - name: neofetch
    source:
      subdir: bundled
      git: 'https://github.com/Andy-Python-Programmer/neofetch'
      branch: 'master'
    configure:
      - args: ['cp', '-r', '@THIS_SOURCE_DIR@/.', '@THIS_BUILD_DIR@']
    build:
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  # - name: ripgrep
  #   source:
  #     subdir: bundled
  #     git: 'https://github.com/BurntSushi/ripgrep.git'
  #     tag: '12.1.1'
  #     version: '12.1.1'
  #   tools_required:
  #     - host-cargo
  #   sources_required:
  #     - rust-patched-libs
  #   pkgs_required:
  #     - mlibc
  #   configure:
  #     - args: ['cp', '-r', '@THIS_SOURCE_DIR@/.', '@THIS_BUILD_DIR@']
  #     # cc: https://github.com/rust-lang/cargo/issues/10283
  #     # - args: ['python3', '@SOURCE_ROOT@/tools/cargo-inject-patches.py', '@THIS_SOURCE_DIR@/Cargo.toml']
  #   build:
  #     - args: ['python3', '@SOURCE_ROOT@/tools/cargo-inject-patches.py', './Cargo.toml']
  #     - args:
  #       - 'cargo'
  #       - 'install'
  #       - '--locked'
  #       - '--path'
  #       - '.'
  #       - '--root'
  #       - '@THIS_COLLECT_DIR@/usr'
  #       - '-j@PARALLELISM@'

  # - name: hex
  #   source:
  #     subdir: bundled
  #     git: 'https://github.com/sitkevij/hex'
  #     tag: 'v0.4.2'
  #     version: '0.4.2'
  #   tools_required:
  #     - host-cargo
  #   sources_required:
  #     - rust-patched-libs
  #   pkgs_required:
  #     - mlibc
  #   configure:
  #     # cc: https://github.com/rust-lang/cargo/issues/10283
  #     # - args: ['python3', '@SOURCE_ROOT@/tools/cargo-inject-patches.py', '@THIS_SOURCE_DIR@/Cargo.toml']
  #     - args: ['cp', '-r', '@THIS_SOURCE_DIR@/.', '@THIS_BUILD_DIR@']
  #   build:
  #     - args: ['python3', '@SOURCE_ROOT@/tools/cargo-inject-patches.py', './Cargo.toml']
  #     - args:
  #       - 'cargo'
  #       - 'install'
  #       - '--locked'
  #       - '--path'
  #       - '.'
  #       - '--root'
  #       - '@THIS_COLLECT_DIR@/usr'
  #       - '-j@PARALLELISM@'

  # - name: bat
  #   source:
  #     subdir: 'bundled'
  #     git: 'https://github.com/sharkdp/bat'
  #     branch: master
  #     commit: '7334ab45422882686212ed31df2d95c02e7585f1'
  #   tools_required:
  #     - host-cargo
  #   sources_required:
  #     - rust-patched-libs
  #   pkgs_required:
  #     - mlibc
  #   configure:
  #     - args: ['cp', '-r', '@THIS_SOURCE_DIR@/.', '@THIS_BUILD_DIR@']
  #   build:
  #     - args: ['python3', '@SOURCE_ROOT@/tools/cargo-inject-patches.py', './Cargo.toml']
  #     - args:
  #       - 'cargo'
  #       - 'install'
  #       - '--locked'
  #       - '--path'
  #       - '.'
  #       - '--root'
  #       - '@THIS_COLLECT_DIR@/usr'
  #       - '-j@PARALLELISM@'
  #       - '--no-default-features'
  #       - '--features=regex-fancy,wild,clap,atty,dirs-next,paging'

  - name: quickjs
    source:
      subdir: bundled
      git: 'https://github.com/bellard/quickjs'
      branch: master
      commit: 'b5e62895c619d4ffc75c9d822c8d85f1ece77e5b'
    tools_required:
      - host-gcc
    configure:
      - args: ['cp', '-r', '@THIS_SOURCE_DIR@/.', '@THIS_BUILD_DIR@']
    build:
      - args: ['make', '-j@PARALLELISM@', 'CROSS_PREFIX=x86_64-aero-']
      - args: ['mkdir', '-p', '@THIS_COLLECT_DIR@/usr/bin']
      - args: ['cp', '@THIS_BUILD_DIR@/qjs', '@THIS_COLLECT_DIR@/usr/bin/qjs']

  # - name: sd
  #   source:
  #     subdir: bundled
  #     git: 'https://github.com/chmln/sd'
  #     tag: 'v0.7.6'
  #     version: '0.7.6'
  #   tools_required:
  #     - host-cargo
  #   sources_required:
  #     - rust-patched-libs
  #   pkgs_required:
  #     - mlibc
  #   configure:
  #     - args: ['cp', '-r', '@THIS_SOURCE_DIR@/.', '@THIS_BUILD_DIR@']
  #     # cc: https://github.com/rust-lang/cargo/issues/10283
  #     # - args: ['python3', '@SOURCE_ROOT@/tools/cargo-inject-patches.py', '@THIS_SOURCE_DIR@/Cargo.toml']
  #   build:
  #     - args: ['python3', '@SOURCE_ROOT@/tools/cargo-inject-patches.py', './Cargo.toml']
  #     - args:
  #       - 'cargo'
  #       - 'install'
  #       - '--locked'
  #       - '--path'
  #       - '.'
  #       - '--root'
  #       - '@THIS_COLLECT_DIR@/usr'
  #       - '-j@PARALLELISM@'

  # - name: llvm
  #   from_source: llvm
  #   tools_required:
  #     - host-gcc
  #     - host-cmake
  #   pkgs_required:
  #     - mlibc
  #     - zlib
  #   revision: 3
  #   configure:
  #     - args:
  #       - 'cmake'
  #       - '-GNinja'
  #       - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/userland/CMakeToolchain-x86_64.txt'
  #       - '-DCMAKE_INSTALL_PREFIX=/usr'
  #       # We really have to build LLVM in Release mode.
  #       # Building it in debug mode produces tens of GiB of debugging info.
  #       - '-DCMAKE_BUILD_TYPE=Release'
  #       - '-DLLVM_LINK_LLVM_DYLIB=ON'
  #       # RTTI affects the ABI. Hence, we enable it.
  #       - '-DLLVM_ENABLE_RTTI=ON'
  #       - '-DLLVM_TARGETS_TO_BUILD=X86'
  #       - '-DLLVM_TARGET_ARCH=X86_64'
  #       - '-DLLVM_DEFAULT_TARGET_TRIPLE=x86_64-aero'
  #       - '-DLLVM_HOST_TRIPLE=x86_64-aero'
  #       # Disable linking against ncurses, which we do not build with -fPIC.
  #       - '-DLLVM_ENABLE_TERMINFO=OFF'
  #       # Suppress developer warnings
  #       - '-Wno-dev'
  #       - '@THIS_SOURCE_DIR@/llvm'
  #   build:
  #     - args: ['ninja']
  #     - args: ['ninja', 'install']
  #       environ:
  #         DESTDIR: '@THIS_COLLECT_DIR@'

  - name: mlibc-headers
    from_source: mlibc
    implict_package: true
    configure:
      - args:
        - 'meson'
        - '--cross-file'
        - '@SOURCE_ROOT@/userland/cross-file.ini'
        - '--prefix=/usr'
        - '-Dheaders_only=true'
        - '-Ddisable_iconv_option=true'
        - '-Dbuildtype=debug'
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: mlibc
    from_source: mlibc
    tools_required:
      - tool: host-gcc
        stage_dependencies: [compiler]
    implict_package: true
    pkgs_required:
      - mlibc-headers
    configure:
      - args:
        - 'meson'
        - '--cross-file'
        - '@SOURCE_ROOT@/userland/cross-file.ini'
        - '--prefix=/usr'
        - '--libdir=lib'
        - '-Dmlibc_no_headers=true'
        - '-Ddisable_iconv_option=true'
        - '-Dbuildtype=debug'
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: libdrm
    source:
      subdir: 'bundled'
      git: 'https://gitlab.freedesktop.org/mesa/drm'
      tag: 'libdrm-2.4.110'
      version: '2.4.110'
    tools_required:
      - host-gcc
    pkgs_required:
      - mlibc
    configure:
      - args:
        - 'meson'
        - '--cross-file'
        - '@SOURCE_ROOT@/userland/cross-file.ini'
        - '--prefix=/usr'
        - '--libdir=lib'
        - '--buildtype=debugoptimized'
        - '-Dintel=false'
        - '-Dvmwgfx=false'
        - '-Dradeon=false'
        - '-Damdgpu=false'
        - '-Dnouveau=false'
        - '-Dman-pages=false'
        # We might want to build cairo with OpenGL support.
        # Doing so would introduce a circular dependency here.
        - '-Dcairo-tests=false'
        - '@THIS_SOURCE_DIR@'
    build:
    - args: ['ninja']
    - args: ['ninja', 'install']
      environ:
        DESTDIR: '@THIS_COLLECT_DIR@'

  - name: drm_test
    source:
      subdir: 'bundled'
      # copied from https://github.com/dvdhrm/docs/tree/master/drm-howto
      #
      # changes: compile to the aero target instead of the linux one.
      git: 'https://github.com/aero-os/drm_test'
      branch: 'master'
    tools_required:
      - host-gcc
    pkgs_required:
      - libdrm
      - mlibc
    configure:
      - args: ['cp', '-r', '@THIS_SOURCE_DIR@/.', '@THIS_BUILD_DIR@']
    build:
      - args: ['make']
      - args: ['mkdir', '-p', '@THIS_COLLECT_DIR@/usr/bin']
      - args: ['mv', 'drm', '@THIS_COLLECT_DIR@/usr/bin']

  - name: nyancat
    source:
      subdir: 'bundled'
      git: 'https://github.com/klange/nyancat.git'
      tag: '1.5.2'
      version: '1.5.2'
    tools_required:
      - host-gcc
    pkgs_required:
      - mlibc
    configure:
      - args: ['cp', '-r', '@THIS_SOURCE_DIR@/.', '@THIS_BUILD_DIR@']
    build:
      - args: ['make', '-j@PARALLELISM@']
        environ:
          CC: "x86_64-aero-gcc"
      - args: ['mkdir', '-pv', '@THIS_COLLECT_DIR@/usr/bin']
      - args: ['mkdir', '-pv', '@THIS_COLLECT_DIR@/usr/share/man/man1']
      - args: ['cp', '-v', '@THIS_BUILD_DIR@/src/nyancat', '@THIS_COLLECT_DIR@/usr/bin']
      - args: ['cp', '-v', '@THIS_BUILD_DIR@/nyancat.1', '@THIS_COLLECT_DIR@/usr/share/man/man1']

  - name: coreutils
    source:
      subdir: 'bundled'
      url: 'https://ftp.gnu.org/gnu/coreutils/coreutils-8.32.tar.xz'
      format: 'tar.xz'
      extract_path: 'coreutils-8.32'
      patch-path-strip: 3
    tools_required:
      - host-gcc
    configure:
      # Huge hack: coreutils does not compile the build-machine binary make-prime-list
      # using the build-machine compiler. Hence, build and invoke the binary manually here.
      - args:
        - '@THIS_SOURCE_DIR@/configure'
      - args: ['make', 'src/make-prime-list']
      - args: |
          ./src/make-prime-list 5000 > @THIS_SOURCE_DIR@/src/primes.h
      - args: ['make', 'clean']
      # No compile coreutils for the correct target.
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-aero'
        - '--prefix=/usr'
        - 'CFLAGS=-DSLOW_BUT_NO_HACKS -Wno-error'
        - '--enable-install-program=hostname'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: tzdata
    from_source: tzdata
    tools_required:
      - host-gcc
    pkgs_required:
      - mlibc
    configure:
      - args: ['cp', '-r', '@THIS_SOURCE_DIR@/.', '@THIS_BUILD_DIR@/']
    build:
      # Build and install support programs
      - args: ['make', 'CC=x86_64-aero-gcc', 'AR=x86_64-aero-ar']
      - args: ['make', 'install', 'DESTDIR=@THIS_COLLECT_DIR@', 'ZIC=zic']
      # Create the required directories
      - args: ['mkdir', '-p', '@THIS_COLLECT_DIR@/etc']
      - args: ['mkdir', '-p', '@THIS_COLLECT_DIR@/usr/share/zoneinfo/posix']
      - args: ['mkdir', '-p', '@THIS_COLLECT_DIR@/usr/share/zoneinfo/right']
      # Create the time zone files without leap seconds, convention puts these in both zoneinfo and zoneinfo/posix.
      # After that. create time time zone files with leap seconds
      - args: |
          set -e
          zic -L /dev/null -d "@THIS_COLLECT_DIR@"/usr/share/zoneinfo "@THIS_BUILD_DIR@"/etcetera
          zic -L /dev/null -d "@THIS_COLLECT_DIR@"/usr/share/zoneinfo/posix "@THIS_BUILD_DIR@"/etcetera
          zic -L "@THIS_SOURCE_DIR@"/leapseconds -d "@THIS_COLLECT_DIR@"/usr/share/zoneinfo/right "@THIS_BUILD_DIR@"/etcetera
          zic -L /dev/null -d "@THIS_COLLECT_DIR@"/usr/share/zoneinfo "@THIS_BUILD_DIR@"/southamerica
          zic -L /dev/null -d "@THIS_COLLECT_DIR@"/usr/share/zoneinfo/posix "@THIS_BUILD_DIR@"/southamerica
          zic -L "@THIS_SOURCE_DIR@"/leapseconds -d "@THIS_COLLECT_DIR@"/usr/share/zoneinfo/right "@THIS_BUILD_DIR@"/southamerica
          zic -L /dev/null -d "@THIS_COLLECT_DIR@"/usr/share/zoneinfo "@THIS_BUILD_DIR@"/northamerica
          zic -L /dev/null -d "@THIS_COLLECT_DIR@"/usr/share/zoneinfo/posix "@THIS_BUILD_DIR@"/northamerica
          zic -L "@THIS_SOURCE_DIR@"/leapseconds -d "@THIS_COLLECT_DIR@"/usr/share/zoneinfo/right "@THIS_BUILD_DIR@"/northamerica
          zic -L /dev/null -d "@THIS_COLLECT_DIR@"/usr/share/zoneinfo "@THIS_BUILD_DIR@"/europe
          zic -L /dev/null -d "@THIS_COLLECT_DIR@"/usr/share/zoneinfo/posix "@THIS_BUILD_DIR@"/europe
          zic -L "@THIS_SOURCE_DIR@"/leapseconds -d "@THIS_COLLECT_DIR@"/usr/share/zoneinfo/right "@THIS_BUILD_DIR@"/europe
          zic -L /dev/null -d "@THIS_COLLECT_DIR@"/usr/share/zoneinfo "@THIS_BUILD_DIR@"/africa
          zic -L /dev/null -d "@THIS_COLLECT_DIR@"/usr/share/zoneinfo/posix "@THIS_BUILD_DIR@"/africa
          zic -L "@THIS_SOURCE_DIR@"/leapseconds -d "@THIS_COLLECT_DIR@"/usr/share/zoneinfo/right "@THIS_BUILD_DIR@"/africa
          zic -L /dev/null -d "@THIS_COLLECT_DIR@"/usr/share/zoneinfo "@THIS_BUILD_DIR@"/antarctica
          zic -L /dev/null -d "@THIS_COLLECT_DIR@"/usr/share/zoneinfo/posix "@THIS_BUILD_DIR@"/antarctica
          zic -L "@THIS_SOURCE_DIR@"/leapseconds -d "@THIS_COLLECT_DIR@"/usr/share/zoneinfo/right "@THIS_BUILD_DIR@"/antarctica
          zic -L /dev/null -d "@THIS_COLLECT_DIR@"/usr/share/zoneinfo "@THIS_BUILD_DIR@"/asia
          zic -L /dev/null -d "@THIS_COLLECT_DIR@"/usr/share/zoneinfo/posix "@THIS_BUILD_DIR@"/asia
          zic -L "@THIS_SOURCE_DIR@"/leapseconds -d "@THIS_COLLECT_DIR@"/usr/share/zoneinfo/right "@THIS_BUILD_DIR@"/asia
          zic -L /dev/null -d "@THIS_COLLECT_DIR@"/usr/share/zoneinfo "@THIS_BUILD_DIR@"/australasia
          zic -L /dev/null -d "@THIS_COLLECT_DIR@"/usr/share/zoneinfo/posix "@THIS_BUILD_DIR@"/australasia
          zic -L "@THIS_SOURCE_DIR@"/leapseconds -d "@THIS_COLLECT_DIR@"/usr/share/zoneinfo/right "@THIS_BUILD_DIR@"/australasia
          zic -L /dev/null -d "@THIS_COLLECT_DIR@"/usr/share/zoneinfo "@THIS_BUILD_DIR@"/backward
          zic -L /dev/null -d "@THIS_COLLECT_DIR@"/usr/share/zoneinfo/posix "@THIS_BUILD_DIR@"/backward
          zic -L "@THIS_SOURCE_DIR@"/leapseconds -d "@THIS_COLLECT_DIR@"/usr/share/zoneinfo/right "@THIS_BUILD_DIR@"/backward
      # Create the posixrules file, POSIX requires daylight saving rules to be in accordance with US rules, thus use New York
      - args: ['zic', '-d', '@THIS_COLLECT_DIR@/usr/share/zoneinfo', '-p', 'America/New_York']
      # Default to UTC for localtime, this should be fixed, but that is pending xbstrap support.
      - args: ['ln', '-sf', '/usr/share/zoneinfo/UTC', '@THIS_COLLECT_DIR@/etc/localtime']

  - name: ncurses
    source:
      subdir: 'bundled'
      git: 'https://github.com/ThomasDickey/ncurses-snapshots.git'
      tag: 'v6_2'
      version: '6.2'
    tools_required:
      - host-gcc
      - host-pkg-config
    pkgs_required:
      - mlibc
    revision: 4
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-aero'
        - '--prefix=/usr'
        - '--without-ada'
        - '--enable-pc-files'
        - '--with-shared'
        - '--without-normal'
        - '--with-manpage-format=normal'
        - '--with-pkg-config-libdir=/usr/lib/pkgconfig'
        - '--with-termlib'
        - '--enable-widec'
        - '--disable-stripping'
        environ:
          cf_cv_func_nanosleep: 'yes'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'DESTDIR=@THIS_COLLECT_DIR@', 'install']
      # As we build ncurses with wide character support, make some compatibility links
      - args: |
          for lib in ncurses form panel menu tinfo ; do
              rm -vf                    @THIS_COLLECT_DIR@/usr/lib/lib${lib}.so
              echo "INPUT(-l${lib}w)" > @THIS_COLLECT_DIR@/usr/lib/lib${lib}.so
              ln -sfv ${lib}w.pc        @THIS_COLLECT_DIR@/usr/lib/pkgconfig/${lib}.pc
          done
          rm -vf                     @THIS_COLLECT_DIR@/usr/lib/libcursesw.so
          echo "INPUT(-lncursesw)" > @THIS_COLLECT_DIR@/usr/lib/libcursesw.so
          ln -sfv libncurses.so      @THIS_COLLECT_DIR@/usr/lib/libcurses.so

  - name: gcc
    from_source: gcc
    revision: 2
    tools_required:
      - host-gcc
    pkgs_required:
      - mlibc
      - binutils
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-aero'
        - '--prefix=/usr'
        - '--target=x86_64-aero'
        - '--with-sysroot=/'
        - '--with-build-sysroot=@SYSROOT_DIR@'
        - '--enable-languages=c,c++'
        - '--enable-initfini-array'
        - '--disable-multilib'
        - '--disable-nls'
        # -g blows up GCC's binary size.
        - 'CFLAGS=-O2 -pipe'
        - 'CXXFLAGS=-O2 -pipe'
    build:
      - args: ['make', '-j@PARALLELISM@', 'all-gcc', 'all-target-libgcc']
      - args: ['make', 'install-strip-gcc', 'install-strip-target-libgcc']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
      - args: ['sh', '-c', 'cp -rv @BUILD_ROOT@/tools/host-gcc/x86_64-aero/lib/* @THIS_COLLECT_DIR@/usr/lib/']
      - args: ['sh', '-c', 'cp -rv @BUILD_ROOT@/tools/host-gcc/x86_64-aero/include/* @THIS_COLLECT_DIR@/usr/include/']
      - args: ['ln', '-s', '/usr/bin/gcc', '@THIS_COLLECT_DIR@/usr/bin/cc']

  - name: binutils
    from_source: binutils
    tools_required:
      - host-gcc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-aero'
        - '--prefix=/usr'
        - '--target=x86_64-aero'
        - '--with-sysroot=/'
        - '--disable-nls'
        # On recent compilers, binutils 2.26 causes implicit-fallthrough warnings, among others.
        - '--disable-werror'
        - '--disable-gdb'
        # -g blows up the binary size.
        - 'CFLAGS=-pipe'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install-strip']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: bash
    source:
      git: 'https://github.com/bminor/bash'
      # Checkout bash 5.1
      branch: 'master'
      commit: '9439ce094c9aa7557a9d53ac7b412a23aa66e36b'
      version: '5.1.16'
      subdir: 'bundled'
    tools_required:
      - host-gcc
      - host-autoconf-v2.69
      - host-automake-v1.16
    pkgs_required:
      - mlibc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-aero'
        - '--prefix=/usr'
        - '--without-bash-malloc'
        - '--disable-nls'
        environ:
          ac_cv_func_wcswidth: 'no'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'DESTDIR=@THIS_COLLECT_DIR@', 'install']
      - args: ['ln', '-sf', '/usr/bin/bash', '@THIS_COLLECT_DIR@/usr/bin/sh']
      - args: ['mkdir', '-p', '@THIS_COLLECT_DIR@/bin']
      - args: ['ln', '-sf', '/usr/bin/bash', '@THIS_COLLECT_DIR@/bin/sh']

  - name: tcc
    source:
      subdir: 'bundled'
      git: 'https://github.com/aero-os/tcc'
      branch: master
      patch-path-strip: 3
    tools_required:
      - host-gcc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--tccdir=/usr/lib/tcc'
        - '--elfinterp=/usr/lib/ld.so'
        - '--libpaths=/usr/lib'
        - '--sysincludepaths=/usr/lib/tcc/include:/usr/include'
        - '--cross-prefix=x86_64-aero-'
        - '--cc=gcc'
        - '--ar=ar'
        - '--with-selinux'
        - '--strip-binaries'
        - '--prefix=/usr'
    build:
      - args: ['make']
      - args: ['make', 'DESTDIR=@THIS_COLLECT_DIR@', 'install-strip']

  - name: nasm
    source:
      subdir: 'bundled'
      url: 'http://www.nasm.us/pub/nasm/releasebuilds/2.14.02/nasm-2.14.02.tar.xz'
      format: 'tar.xz'
      extract_path: 'nasm-2.14.02'
      version: '2.14.02'
    tools_required:
      - host-gcc
    pkgs_required:
      - mlibc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-aero'
        - '--prefix=/usr'
        - 'CFLAGS=-g -O0'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: python
    from_source: python
    tools_required:
      - host-gcc
      - host-python
    pkgs_required:
      - mlibc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-aero'
        - '--build=x86_64-linux-gnu'
        - '--prefix=/usr'
        - '--enable-shared'
        - '--with-sysroot=@SYSROOT_DIR@' # Set libtool's lt_sysroot.
        - '--with-system-ffi'
        - '--with-system-expat'
        - '--disable-ipv6'
        - '--without-ensurepip'
        environ:
          CONFIG_SITE: '@SOURCE_ROOT@/extra-files/python/python-config-site'
          PKG_CONFIG_SYSROOT_DIR: '@BUILD_ROOT@/system-root'
          PKG_CONFIG_LIBDIR: '@BUILD_ROOT@/system-root/usr/lib/pkgconfig:@BUILD_ROOT@/system-root/usr/share/pkgconfig'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: doomgeneric
    source:
      subdir: 'bundled'
      git: 'https://github.com/ozkl/doomgeneric.git'
      branch: 'master'
      commit: '2d9b24f07c78c36becf41d89db30fa99863463e5'
    tools_required:
      - host-gcc
    pkgs_required:
      - mlibc
    build:
      - args: ['make', '-C', '@THIS_SOURCE_DIR@/doomgeneric', '-f', 'Makefile', '-j@PARALLELISM@', 'CC=x86_64-aero-gcc']
      - args: ['mkdir', '-p', '@THIS_COLLECT_DIR@/usr/bin']
      - args: ['cp', '@THIS_SOURCE_DIR@/doomgeneric/doomgeneric', '@THIS_COLLECT_DIR@/usr/bin/doomgeneric']

  - name: lua
    source:
      subdir: bundled
      url: 'https://www.lua.org/ftp/lua-5.3.5.tar.gz'
      format: 'tar.gz'
      extract_path: 'lua-5.3.5'
      version: '5.3.5'
    tools_required:
      - host-gcc
    pkgs_required:
      - mlibc
    configure:
      - args: ['cp', '-r', '@THIS_SOURCE_DIR@/.', '@THIS_BUILD_DIR@']
      - args:
        - 'sed'
        - '-i'
        - 's|^#define LUA_ROOT "/usr/local/"$|#define LUA_ROOT "/usr/"|'
        - 'src/luaconf.h'
    build:
      - args:
        - 'make'
        - 'generic'
        - 'CC=x86_64-aero-gcc'
        - 'AR=x86_64-aero-ar rcu'
        - 'RANLIB=x86_64-aero-ranlib'
        - '-j@PARALLELISM@'
      - args: ['make', 'install', 'INSTALL_TOP=@THIS_COLLECT_DIR@/usr']

  # -------------------- wayland --------------------
  - name: wayland-protocols
    source:
      subdir: 'bundled'
      git: 'https://github.com/wayland-project/wayland-protocols.git'
      tag: '1.24'
      version: '1.24'
    tools_required:
      - host-gcc
      - wayland-scanner
    configure:
      - args:
        - 'meson'
        - '--cross-file'
        - '@SOURCE_ROOT@/userland/cross-file.ini'
        - '--prefix=/usr'
        - '--buildtype=release'
        - '-Dtests=false'
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
        quiet: true

  - name: libexpat
    source:
      subdir: 'bundled'
      git: 'https://github.com/libexpat/libexpat.git'
      tag: 'R_2_4_1'
      version: '2.4.1'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.16
        - host-libtool
      regenerate:
        - args: ['./buildconf.sh']
          workdir: '@THIS_SOURCE_DIR@/expat'
    tools_required:
      - host-autoconf-v2.69
      - host-automake-v1.16
      - host-gcc
    pkgs_required:
      - mlibc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/expat/configure'
        - '--host=x86_64-aero'
        - '--prefix=/usr'
        - '--with-sysroot=@SYSROOT_DIR@' # Set libtool's lt_sysroot.
        # We disable xmlwf to avoid building its documentation.
        - '--without-xmlwf'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
        quiet: true

  - name: libffi
    source:
      subdir: 'bundled'
      git: 'https://github.com/libffi/libffi.git'
      tag: 'v3.4.2'
      version: '3.4.2'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.16
        - host-libtool
      regenerate:
        - args: ['./autogen.sh']
        - args: ['cp',
            '@BUILD_ROOT@/tools/host-automake-v1.16/share/automake-1.16/config.sub',
            '@THIS_SOURCE_DIR@/']
    tools_required:
      - host-gcc
    pkgs_required:
      - mlibc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-aero'
        - '--prefix=/usr'
        - '--with-sysroot=@SYSROOT_DIR@' # Set libtool's lt_sysroot.
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install-strip']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: wayland
    from_source: wayland
    tools_required:
      - host-pkg-config
      - host-gcc
      - wayland-scanner
      - host-libtool
      - virtual: pkgconfig-for-target
        triple: "x86_64-aero"
      - virtual: pkgconfig-for-host
        program_name: host-pkg-config
    pkgs_required:
      - mlibc
      - libexpat
      - libffi
    configure:
      - args:
        - 'meson'
        - '--native-file'
        - '@SOURCE_ROOT@/userland/native-file.ini'
        - '--cross-file'
        - '@SOURCE_ROOT@/userland/cross-file.ini'
        - '--prefix=/usr'
        - '--buildtype=debugoptimized'
        - '-Ddtd_validation=false'
        - '-Ddocumentation=false'
        - '-Dscanner=false'
        - '@THIS_SOURCE_DIR@'
        environ:
          PKG_CONFIG_SYSROOT_DIR: '@BUILD_ROOT@/system-root'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: zlib
    source:
      subdir: 'bundled'
      git: 'https://github.com/madler/zlib.git'
      tag: 'v1.2.12'
      version: '1.2.12'
    tools_required:
      - host-gcc
    pkgs_required:
      - mlibc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        environ:
          CHOST: 'x86_64-aero'
          prefix: '/usr'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: openssl
    source:
      subdir: 'bundled'
      git: 'https://github.com/openssl/openssl.git'
      tag: 'OpenSSL_1_1_1o'
      version: '1.1.1o'
    tools_required:
      - host-gcc
    pkgs_required:
      - mlibc
      - zlib
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/Configure'
        - '--prefix=/usr'
        - '--openssldir=/etc/ssl'
        - '--libdir=lib'
        - 'x86_64-aero'
        - 'shared'
        - 'zlib-dynamic'
        - 'no-afalgeng'
        environ:
          CC: 'x86_64-aero-gcc'
          CXX: 'x86_64-aero-g++'
    build:
      - args: ['make', '-j@PARALLELISM@']
      # Disable installing static libraries
      - args: ['sed', '-i', '/INSTALL_LIBS/s/libcrypto.a libssl.a//', '@THIS_BUILD_DIR@/Makefile']
      # Suffix all man pages with ssl
      - args: ['make', 'DESTDIR=@THIS_COLLECT_DIR@', 'MANSUFFIX=ssl', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
      # Move the doc dir to a versioned directory
      - args: ['mv', '@THIS_COLLECT_DIR@/usr/share/doc/openssl', '@THIS_COLLECT_DIR@/usr/share/doc/openssl-1.1.1o']

  - name: libpng
    source:
      subdir: 'bundled'
      git: 'https://git.code.sf.net/p/libpng/code'
      tag: 'v1.6.37'
      version: '1.6.37'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.16
        - host-libtool
      regenerate:
        - args: ['git', 'clean', '-xf', '-e', '*.xbstrap']
        - args: ['autoreconf', '-fvi']
    tools_required:
      - host-gcc
    pkgs_required:
      - mlibc
      - zlib
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-aero'
        - '--prefix=/usr'
        - '--with-sysroot=@SYSROOT_DIR@' # Set libtool's lt_sysroot.
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install-strip']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: freetype
    source:
      subdir: 'bundled'
      git: 'https://gitlab.freedesktop.org/freetype/freetype.git'
      tag: 'VER-2-12-1'
      version: '2.12.1'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.16
        - host-libtool
        - host-pkg-config
      regenerate:
        - args: ['./autogen.sh']
          environ:
            NOCONFIGURE: '1'
        - args: ['cp',
            '@BUILD_ROOT@/tools/host-automake-v1.16/share/automake-1.16/config.sub',
            '@THIS_SOURCE_DIR@/builds/unix/']
    tools_required:
      - host-gcc
    pkgs_required:
      - mlibc
      - libpng
      - zlib
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-aero'
        - '--prefix=/usr'
        - '--disable-static'
        - '--with-harfbuzz=no'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: fontconfig
    source:
      subdir: 'bundled'
      git: 'https://gitlab.freedesktop.org/fontconfig/fontconfig.git'
      tag: '2.14.0'
      version: '2.14.0'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.16
        - host-libtool
        - host-pkg-config
      regenerate:
        - args: ['./autogen.sh']
          environ:
            NOCONFIGURE: 'yes'
        # Make sure we regenerate this file
        - args: ['rm', '-f', 'src/fcobjshash.h']
    pkgs_required:
      - mlibc
      - freetype
      - libxml
      - libiconv
    tools_required:
      - host-autoconf-v2.69
      - host-automake-v1.16
      - host-gcc
      - host-libtool
      - host-pkg-config
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-aero'
        - '--prefix=/usr'
        - '--sysconfdir=/etc'
        - '--localstatedir=/var'
        - '--disable-docs'
        - '--with-sysroot=@SYSROOT_DIR@' # Set libtool's lt_sysroot.
        - '--enable-libxml2'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install-strip']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: libxml
    source:
      subdir: 'bundled'
      git: 'https://gitlab.gnome.org/GNOME/libxml2.git'
      tag: 'v2.9.14'
      version: '2.9.14'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.16
        - host-libtool
        - host-pkg-config
      regenerate:
        - args: ['./autogen.sh']
          environ:
            NOCONFIGURE: 'yes'
    tools_required:
      - host-gcc
    pkgs_required:
      - mlibc
      - zlib
      - python
      - libiconv
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-aero'
        - '--prefix=/usr'
        - '--with-python=@SYSROOT_DIR@/usr/bin/python3.8'
        - '--disable-static'
        - '--with-threads'
        - '--disable-ipv6'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install-strip']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: libiconv
    source:
      subdir: 'bundled'
      git: 'https://git.savannah.gnu.org/git/libiconv.git'
      # Last release tag is broken for us, use current master (07-12-2020)
      branch: 'master'
      commit: '0eb1068ceb77ba383c3ce2fc391ab40ef686c491'
      version: '1.16'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.16
        - host-libtool
        - host-pkg-config
      regenerate:
        - args: ['./gitsub.sh', 'pull']
        # Gnulib broke on commit e3174b6d1fdbe6ea2297bf8c8333f65f9d9d9588, so check out the one before that.
        - args: ['git', 'checkout', '766ec17a90f67e8cda78394e58a7fffb00f5a4b7']
          workdir: '@THIS_SOURCE_DIR@/gnulib'
        - args: ['./autogen.sh']
          environ:
            'NOCONFIGURE': 'yes'
        - args: ['cp',
            '@BUILD_ROOT@/tools/host-automake-v1.16/share/automake-1.16/config.sub',
            '@THIS_SOURCE_DIR@/build-aux/']
        - args: ['cp',
            '@BUILD_ROOT@/tools/host-automake-v1.16/share/automake-1.16/config.sub',
            '@THIS_SOURCE_DIR@/libcharset/build-aux/']
        - args: ['cp',
            '@BUILD_ROOT@/tools/host-libtool/share/aclocal/libtool.m4',
            '@THIS_SOURCE_DIR@/m4/']
        - args: ['cp',
            '@BUILD_ROOT@/tools/host-libtool/share/aclocal/libtool.m4',
            '@THIS_SOURCE_DIR@/libcharset/m4/']
        - args: ['cp',
            '@BUILD_ROOT@/tools/host-libtool/share/libtool/build-aux/ltmain.sh',
            '@THIS_SOURCE_DIR@/libcharset/build-aux/']
        - args: ['cp',
            '@BUILD_ROOT@/tools/host-libtool/share/libtool/build-aux/ltmain.sh',
            '@THIS_SOURCE_DIR@/build-aux/']
        - args: ['cp',
            '@BUILD_ROOT@/tools/host-libtool/share/aclocal/ltversion.m4',
            '@THIS_SOURCE_DIR@/m4/']
        - args: ['cp',
            '@BUILD_ROOT@/tools/host-libtool/share/aclocal/ltversion.m4',
            '@THIS_SOURCE_DIR@/libcharset/m4/']
        - args: ['autoreconf', '-fvi', '-I@THIS_SOURCE_DIR@/m4', '-I@THIS_SOURCE_DIR@/srcm4']
    tools_required:
      - host-gcc
      - host-libtool
    pkgs_required:
      - mlibc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-aero'
        - '--prefix=/usr'
        - '--with-sysroot=@SYSROOT_DIR@' # Set libtool's lt_sysroot.
        - '--disable-nls'
        - '--enable-shared'
        - '--disable-static'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  # - name: weston
  #   labels: [aarch64]
  #   architecture: '@OPTION:arch@'
  #   source:
  #     subdir: 'ports'
  #     git: 'https://github.com/wayland-project/weston.git'
  #     tag: '10.0.0'
  #     version: '10.0.0'
  #   tools_required:
  #     - host-autoconf-v2.69
  #     - host-automake-v1.16
  #     - host-libtool
  #     - host-pkg-config
  #     - system-gcc
  #     - wayland-scanner
  #     - virtual: pkgconfig-for-target
  #       triple: "@OPTION:arch-triple@"
  #     - virtual: pkgconfig-for-host
  #       program_name: host-pkg-config
  #   pkgs_required:
  #     - mlibc
  #     - cairo
  #     - libinput
  #     - libxkbcommon
  #     - mesa
  #     - wayland
  #     - wayland-protocols
  #     - dejavu
  #     - libxcursor
  #     - xorg-server
  #     - pango
  #     - glib
  #     - libjpeg-turbo
  #   configure:
  #     - args:
  #       - 'meson'
  #       - '--native-file'
  #       - '@SOURCE_ROOT@/scripts/meson.native-file'
  #       - '--cross-file'
  #       - '@SOURCE_ROOT@/scripts/meson-@OPTION:arch-triple@.cross-file'
  #       - '--prefix=/usr'
  #       - '--libdir=lib'
  #       - '--buildtype=debugoptimized'
  #       - '-Dbackend-x11=false'
  #       - '-Dsimple-clients=damage,im,egl,shm,touch'
  #       - '-Dimage-jpeg=true'
  #       - '-Dimage-webp=false'
  #       - '-Dlauncher-logind=false'
  #       - '-Dbackend-drm-screencast-vaapi=false'
  #       - '-Dbackend-rdp=false'
  #       - '-Dcolor-management-colord=false'
  #       - '-Dcolor-management-lcms=false'
  #       - '-Dsystemd=false'
  #       - '-Dremoting=false'
  #       - '-Dpipewire=false'
  #       - '@THIS_SOURCE_DIR@'
  #       environ:
  #         PKG_CONFIG_SYSROOT_DIR: '@BUILD_ROOT@/system-root'
  #         PKG_CONFIG_LIBDIR: '@BUILD_ROOT@/system-root/usr/lib/pkgconfig:@BUILD_ROOT@/system-root/usr/share/pkgconfig'
  #   build:
  #     - args: ['ninja']
  #     - args: ['ninja', 'install']
  #       environ:
  #         DESTDIR: '@THIS_COLLECT_DIR@'
  #       quiet: true

tasks:
  - name: sysroot
    pkgs_required:
      - binutils
      - coreutils
      - nyancat
      - gcc
      - tcc
    args:
      - '@SOURCE_ROOT@/make-iso.sh'
      - '@BUILD_ROOT@'
      - '@SOURCE_ROOT@'
      - '@SYSROOT_DIR@'
    workdir: '@BUILD_ROOT@'
